{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b6bb44f-5370-4803-9b76-65429fa23023",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import mysql.connector\n",
    "\n",
    "def insert_data_into_table(curr, conn, table_name, data, query):\n",
    "    try:\n",
    "        for i, row in data.iterrows():\n",
    "            curr.execute(query, list(row))\n",
    "        conn.commit()\n",
    "        print(f\"Data inserted into {table_name} table successfully.\")\n",
    "    except Exception as e:\n",
    "        print(f\"Error inserting into {table_name} table: {e}\")\n",
    "\n",
    "def main():\n",
    "    # Load data\n",
    "    customer_data = pd.read_json(\"customers.json\")\n",
    "    transaction_data = pd.read_json(\"transaction_logs.json\")\n",
    "\n",
    "    # Connect to the database\n",
    "    conn = mysql.connector.connect(\n",
    "        host=\"127.0.0.1\",\n",
    "        user=\"root\",\n",
    "        password=\"1234\",\n",
    "        database=\"projectp0\"\n",
    "    )\n",
    "    curr = conn.cursor()\n",
    "\n",
    "    # Insert data into Customer table\n",
    "    customer_insert_query = \"\"\"\n",
    "    INSERT INTO Customer (customer_id, customer_name, country, city)\n",
    "    VALUES (%s, %s, %s, %s);\n",
    "    \"\"\"\n",
    "    insert_data_into_table(curr, conn, \"Customer\", customer_data, customer_insert_query)\n",
    "\n",
    "    # Insert data into Product table\n",
    "    product_insert_query = \"\"\"\n",
    "    INSERT INTO Product (product_id, product_name, product_category, price, ecommerce_website_name)\n",
    "    VALUES (%s, %s, %s, %s, %s);\n",
    "    \"\"\"\n",
    "    product_table = transaction_data[[\"product_id\", \"product_name\", \"product_category\", \"price\", \"ecommerce_website_name\"]].drop_duplicates(subset=['product_id'])\n",
    "    insert_data_into_table(curr, conn, \"Product\", product_table, product_insert_query)\n",
    "\n",
    "    # Insert data into Orders table\n",
    "    order_insert_query = \"\"\"\n",
    "    INSERT INTO Orders (order_id, customer_id, product_id, qty, datetime)\n",
    "    VALUES (%s, %s, %s, %s, %s);\n",
    "    \"\"\"\n",
    "    orders_table = transaction_data[[\"order_id\", \"customer_id\", \"product_id\", \"qty\", \"datetime\"]]\n",
    "    insert_data_into_table(curr, conn, \"Orders\", orders_table, order_insert_query)\n",
    "\n",
    "    # Insert data into Payment table\n",
    "    payment_insert_query = \"\"\"\n",
    "    INSERT INTO Payment (payment_txn_id, order_id, payment_type, payment_txn_success, failure_reason)\n",
    "    VALUES (%s, %s, %s, %s, %s);\n",
    "    \"\"\"\n",
    "    payment_table = transaction_data[[\"payment_txn_id\", \"order_id\", \"payment_type\", \"payment_txn_success\", \"failure_reason\"]]\n",
    "    insert_data_into_table(curr, conn, \"Payment\", payment_table, payment_insert_query)\n",
    "\n",
    "    # Close connection\n",
    "    curr.close()\n",
    "    conn.close()\n",
    "    print(\"Database connection closed.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
